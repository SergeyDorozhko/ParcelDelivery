version: '3.5'
services:

  postgres:
    image: postgres:14.4
    command: 'postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.track=all -c max_connections=200'
    ports:
      - "5444:5432"
    environment:
      - POSTGRES_USER=parcel_delivery
      - POSTGRES_DB=parcel_delivery
      - POSTGRES_PASSWORD=parcel_delivery
    networks:
      - parcel-delivery
    volumes:
      - parcel-delivery-postgres-data:/var/lib/postgresql/data
      - ./init/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
    restart: 'on-failure'


  zookeeper:
    image: 'confluentinc/cp-zookeeper:7.3.2'
    ports:
      - '2181:2181'
    environment:
      - 'ZOOKEEPER_CLIENT_PORT=2181'
      - 'ZOOKEEPER_TICK_TIME=2000'
    volumes:
      - 'parcel-delivery-zookeeper-data:/var/lib/zookeeper/data'
      - 'parcel-delivery-zookeeper-logs:/var/lib/zookeeper/log'
    restart: 'on-failure'

  kafka:
    image: 'confluentinc/cp-kafka:7.3.2'
    depends_on:
      - 'zookeeper'
    ports:
      - '9092:9092'
    environment:
      - 'KAFKA_BROKER_ID=1'
      - 'KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181'
      - 'KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      - 'KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      - 'KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT'
      - 'KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1'
    volumes:
      - 'parcel-delivery-kafka-data:/var/lib/kafka/data'
    restart: 'on-failure'
    
    
volumes:
  parcel-delivery-postgres-data:
  parcel-delivery-zookeeper-data:
  parcel-delivery-zookeeper-logs:
  parcel-delivery-kafka-data:
  
networks:
  parcel-delivery:
    driver: bridge
